-- Single Entries
student1 = Student(name="Alice", roll_no=1001, age=20)
with app.app_context():
...   db.session.add(student1)
...   db.session.commit()

-- Multiple Entries 
student2 = Student(name="Bob", roll_no=1002, age=21)
student3 = Student(name="Charlie", roll_no=1003, age=22)
    db.session.add_all([student2, student3])
    db.session.commit()

----To instructors and Courses

course1 = Course(name="Math")
course2 = Course(name="History")
instructor1 = Instructor(name="Dr. Smith", age=45)
instructor2 = Instructor(name="Dr. Johnson", age=50)
db.session.add_all([course1, course2, instructor1, instructor2])
db.session.commit()

--- Query for all
Student.query.all()
Course.query.all()
Instructor.query.all()

--- Selecting and Updating
...  student = Student.query.filter_by(roll_no=1001).first()
...  student.name = "Anthony"
...  db.session.add(student)
...  db.session.commit()

---- Creating relationships

with app.app_context():
...  student = Student.query.filter_by(roll_no=1001).first()
...  student.courses = [course1,course2]
...  db.session.commit()

-- Deleting 
with app.app_context():
     student = Student.query.filter_by(roll_no=1001).first()
     db.session.delete(student)
     db.session.commit()


--- reading by id 
with app.app_context():
...       a = Student.query.filter_by(id = 2).first()  
...       print(a)


---- joining using relationships
>>> with app.app_context():
...          Student.query.join(Student.courses).all()
...          students = Student.query.join(Student.courses).all()
...          for i in students:
...               print(i.name)
...               print(i.courses)
...

>>> with app.app_context():
...     courses = Course.query.join(Course.instructors).all()
...     for i in courses:
...        print(i.name)
...        print(i.instructors)




